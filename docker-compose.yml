services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    networks:
      - "web.network"
  redis:
    container_name: "redis"
    image: redis:alpine
    ports: 
      - "6379:6399"
    networks:
      - "web.network"
    volumes:
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
  db:
    image: postgres
    command:
      ["postgres", "-c", "logging_collector=on", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - "web.network"
    volumes:
      - task_postgres_data:/var/lib/postgresql/data
      # - ./go_backend/logs:/var/lib/postgresql/data/log
  web:
    build: .
    ports:
      - "8000"
    volumes:
      - ".:/app"
    restart: "always"
    environment:
      - Replica= {{.Task.Name}}
      - TZ=Asia/Kolkata
    depends_on:
      - db
    networks:
      - "web.network"
    deploy:
      replicas: 1

networks:
  web.network:
volumes:
  task_postgres_data:
  postgress-logs:
